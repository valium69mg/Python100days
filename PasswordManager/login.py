import os
from dotenv import load_dotenv
from cryptography.fernet import Fernet
from manage_dotenv import write_dotenv_encryption_key
from tkinter import *
from tkinter import messagebox
from tkinter import simpledialog
load_dotenv()

"""
WE CHANGE THE DIRECTORY TO THE PASSWORD MANAGER DIRECTORY IN ORDER FOR 
THE PROGRAM TO WORK
"""
os.chdir("Python 100 DAYS/PasswordManager")

try:  
    key = os.getenv("ENCRYPTION_KEY")
    encryptor = Fernet(key)
except TypeError as err:
    """
    THIS EXCEPTION HANDLES WHEN AN ENCRIPTION KEY IS NOT FOUND IN THE 
    .ENV FILE

    FIRST WE ASK IF THE USER HAS AN ENCRYPTION KEY

    IF SO: THE USER IS ASKED TO INPUT THEIR ENCRYPTION KEY
    IF NOT: THE USER IS ASKED BY THE PROGRAM TO GENERATE THE ENCRYPTION KEY
    """
    info = messagebox.showinfo(title="ENCRYPTION KEY",message="Your encryption key was NOT succesfully loaded.")
    ask_encryption_key = messagebox.askquestion(title="PASSWORD MANAGER",message="Do you have an encryption key?")
    if (ask_encryption_key == 'yes'):
        key = simpledialog.askstring("PASSWORD MANAGER","Type your encryption key: ")
        
    else:
        generate_encryption_key = messagebox.askquestion(title="PASSWORD MANAGER",message="Would you like to generate your encryption key?")
        if (generate_encryption_key == 'yes'):
            key = Fernet.generate_key()
            messagebox.showinfo(title="PASSWORD MANAGER",message=f"Your encryption key is:\n{key}")
            
    """
    PIECE OF CODE THAT MAKES SURE THE VALUES GENERATED BY THE USER OR BY THE KEY GEN
    ARE WITHOUT ANY ERRORS
    """
    try:
        encryptor = Fernet(key)
    except ValueError as err:
        messagebox.showerror(message=err)
    except TypeError as err:
        messagebox.showerror(message=err)
    else:
        save = messagebox.askquestion(title="PASSWORD MANAGER",message="Do you wish to save your encryption key on this device?")
        if (save == 'yes'):
            """
            IF THE OBJECT IS A STR PROPORTIONATED BY THE USER IT DOES NOT NEED DECODIFICATION
            IN ORDER TO STORE IT
            
            IF IT IS GENERATED BY THE FERNET CLASS IT NEEDS TO BE DECODED TO SAVE IT TO THE
            .ENV FILE
            """
            if (type(key) == str):
                write_dotenv_encryption_key(os.getcwd(),key="ENCRYPTION_KEY",value=key)
            else:
                write_dotenv_encryption_key(os.getcwd(),key="ENCRYPTION_KEY",value=key.decode())
            info = messagebox.showinfo(title="ENCRYPTION KEY",message="Your encryption key was succesfully loaded")

    """
    THIS LINES OF CODE EXCECUTE IF THERE IS A KEY STORED IN .ENV FILE
    """
else:
    info = messagebox.showinfo(title="ENCRYPTION KEY",message="Your encryption key was succesfully loaded")
    encryptor = Fernet(key)
    
